{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\"smo-qubo\"","text":""},{"location":"#installation","title":"Installation","text":"<p>Installation guidelines</p>"},{"location":"#usage","title":"Usage","text":"<p>Usage guidelines</p>"},{"location":"#documentation","title":"Documentation","text":"<p>Documentation guidelines</p>"},{"location":"#contribute","title":"Contribute","text":"<p>Contribution guidelines</p>"},{"location":"qubo_to_ising/","title":"QUBO matrix to Ising Hamiltonian","text":"<p>Here we discuss how the matrix formulation of a QUBO problem maps to a Ising Hamiltonian.</p>"},{"location":"qubo_to_ising/#example","title":"Example","text":"<p>To explain how to solve the problem with QAOA, let us use a simple example. Consider minimizing the following 2x2 QUBO objective function:</p> \\[ \\left(\\begin{array}{c} x_1 \\quad x_2 \\end{array}\\right) \\left(\\begin{array}{cc} -5 &amp; -2\\\\ -2 &amp; 6 \\end{array}\\right) \\left(\\begin{array}{c} x_1 \\\\ x_2 \\end{array}\\right) =  - 4 x_1 x_2 - 5 x_1^2 + 6 x_2^2 \\] <p>The function is minimized by \\((x_1, \\ x_2)=(1,0)\\), and the corresponding objective function value is -5.</p> <p>The weights are: \\([ \\ w_{12}=-4, \\ w_{11} = -5, \\ w_{22}=6 \\ ]\\).</p> <p>We first convert the objective function to an Ising Hamiltonian using the following mapping:</p> \\[x_i \\to \\frac{I_i - Z_i}{2}.\\] <p>We call the objective function mapped to a Ising model a QUBO Hamiltonian:</p> \\[ H_Q = \\left[ - 4 (I - Z_1) (I - Z_2) - 5 (I - Z_1)^2 + 6 (I - Z_2)^2 \\right]/4 \\\\[4mm] \\] <p>which simplifies to</p> \\[ H_Q = [ - 4 (I - Z_1 - Z_2 + Z_1Z_2) - 5 (I - 2Z_1 + Z_1^2) + 6 (I - 2Z_2 + Z_2^2) ] / 4 $$ $$ = [ - 4 (I - Z_1 - Z_2 + Z_1Z_2) - 5 (2I - 2Z_1) + 6 (2I - 2Z_2) ] / 4 $$ $$ = - \\frac{1}{2} I + \\frac{7}{2} Z_1 - 2 Z_2 - Z_1Z_2 \\] <p>The problem can be solved by finding the minimum of</p> \\[ \\langle H_Q \\rangle = \\bra{\\psi} \\frac{7}{2} Z_1 - 2 Z_2 - Z_1Z_2 \\ket{\\psi} \\] <p>which corresponds to the computational state \\(\\ket{10}\\) and equals to -5, including the offset term \\(-\\frac{1}{2}I\\).</p> <p>The QUBO Hamiltonian is composed of single and two-qubit \\(Z\\)-Pauli terms. The weights of these terms are a linear combination of the weights \\(w\\) of the QUBO objective function Q and can be easily derived.</p> <p>We label them \\(\\nu\\). In this example, they are: \\([ \\ \\nu_{22} = -2, \\ \\nu_{11} = 7/2, \\ \\nu_{12} = -1 \\ ].\\)</p>"},{"location":"qubo_to_ising/#formula","title":"Formula","text":"<p>Any QUBO problem can be written, without loss of generality, in the following symmetric matricial form:</p> \\[Q = \\sum_{i=1}^N \\sum_{j=1}^N w_{i,j} x_i x_j\\] <p>This is possible because \\(x_i=x_i^2\\) and because \\(x_i\\) and \\(x_j\\) commute. Using the binary-to-Ising mapping defined above, we obtain the following Hamiltonian:</p> \\[ H_Q = \\sum_{i=1}^N \\sum_{j=1}^N w_{i,j} \\left( \\frac{I_i - Z_i}{2} \\right) \\left( \\frac{I_j - Z_j}{2} \\right)\\\\[4mm] = \\ \\sum_{i=1}^N \\sum_{j \\ge i}^N \\frac{w_{i,j}}{2} I \\ \\ - \\ \\ \\sum_{i=1}^N Z_i \\sum_{j=1}^N \\frac{w_{i,j}}{2} \\ \\ + \\ \\ \\sum_{i=1}^N \\sum_{j&gt;i}^N \\frac{w_{i,j}}{2} Z_i Z_j \\] <p>Therefore, we have:</p> \\[ c = \\sum_{i=1}^N \\sum_{j \\ge i}^N \\frac{w_{i,j}}{2}, \\qquad Z_i : \\nu_{i,i} = - \\sum_{j=1}^N \\frac{w_{i,j}}{2}, \\qquad Z_i Z_j : \\nu_{i,j} = \\frac{w_{i,j}}{2} \\] <p>Validation on the example above:</p> \\[ H_Q \\ \\ = \\ \\ \\frac{-5 -2 +6}{2} I \\ \\ - \\ \\ \\left( Z_1 \\frac{-5-2}{2} \\ + \\ Z_2 \\frac{-2+6}{2} \\right) \\ \\ + \\ \\ \\frac{-2}{2} Z_1 Z_2\\\\[4mm] = \\ - \\ \\frac{1}{2} I \\ + \\ \\frac{7}{2} Z_1 \\ - \\ 2 Z_2 \\ - \\ Z_1 Z_2\\\\[4mm] \\]"},{"location":"smo_qubo_problem/","title":"Space Mission Optimization","text":""},{"location":"smo_qubo_problem/#problem-description","title":"Problem Description","text":"<p>The problem is to acquire as many images as possible while obeying the attitude maneuvering constraint of the satellite. Specifically, we examine the agile Earth observation satellite (AEOS) scheduling problem (AEOSSP), where the time to solution grows exponentially with the problem size.</p> <p>Heuristic methods are employed to address the AEOSSP in industrial settings since solutions need to be obtained in a short finite time frame.</p>"},{"location":"smo_qubo_problem/#cost-function","title":"Cost function","text":"<p>The cost function of the problem is:</p> \\[ C = - \\sum_{r \\in R} \\sum_{i \\in I_r} x_{r,i} \\] <p>with:</p> Variable Meaning \\(R\\) set of acquisition requests \\(r \\in R\\) acquisition request \\(I_r\\) list of imaging attempts for a request \\(r\\), resulting from the discretization of the access period, ordered by increasing time \\(i \u2208 I_r\\) imaging attempt \\(x_{r,i} \\in \\{0,1\\}\\) binary variable: selection \\((x=1)\\) or dismissal \\((x=0)\\) <p></p>"},{"location":"smo_qubo_problem/#constraints","title":"Constraints","text":"<ol> <li>No more than one selected imaging attempt per acquisition request</li> </ol> \\[ \\sum_{i\\in I_r} x_{r,i} \\le 1 \\qquad \\forall r \\in R \\] <ol> <li>Mutual exclusion of certain pairs of imaging attemps</li> </ol> \\[ x_{r,i} + x_{s,j} \\le 1 \\qquad \\forall (i,j) \\in F_{r,s} \\quad \\land \\quad \\forall (r,s) \\in R^2, \\quad r \\ne s \\] <p>where</p> \\[ F_{r,s} = \\{ (i,j) \\in I_r \\times I_s : t_i^r \\le t_j^s &lt; t_i^r + d_{r,i}^{\\mathrm{acq}} + d_{(r,i) \\to (s,j)}^{\\mathrm{man}} \\} \\]"},{"location":"smo_qubo_problem/#qubo-formulation","title":"QUBO Formulation","text":"<p>The total QUBO objective function is:</p> \\[Q = C + \\lambda_u C_u + \\lambda_t C_t\\] <p>where \\(C\\) is the problem cost function defined above, and constraints 1. and 2. are fulfilled when the two penalty terms vanish:</p> \\[C_u = \\sum_{r \\in R} \\sum_{(i,j) \\in I_r}^{i \\ne j} x_{r,i} x_{s,j} \\qquad | \\qquad C_t = \\sum_{r,s \\in R}^{r \\ne s} \\sum_{(i,j) \\in F_{r,s}} x_{r,i} x_{s,j}\\] <p>In order to make sure that the penalty terms vanish in the optimal solution of the problem, the penalty weights \\((\\lambda_u, \\ \\lambda_t)\\) ought to be chosen large enough.</p> <p>But how small can they be, before losing effect? An upper bound for the minimum sufficient penalty weights is given by the value of the aquistions in the problem (here equal to 1), meaning we can choose:</p> \\[ \\lambda_u, \\ \\lambda_t \\ \\gtrsim \\ 1 \\]"},{"location":"smo_qubo_problem/#legend","title":"Legend","text":""},{"location":"smo_qubo_problem/#equations","title":"Equations","text":"Name Equation Cost function \\(\\(Q = C + \\lambda_u C_u + \\lambda_t C_t\\)\\) Constraint 1. \\(\\(C_u = \\sum_{r \\in R} \\sum_{(i,j) \\in I_r}^{i \\ne j} x_{r,i} x_{s,j}\\)\\) Constraint 2. \\(\\(C_t = \\sum_{r,s \\in R}^{r \\ne s} \\sum_{(i,j) \\in F_{r,s}} x_{r,i} x_{s,j}\\)\\)"},{"location":"smo_qubo_problem/#legend_1","title":"Legend","text":"Symbol Description \\(\\lambda_u\\) penalty weight, single acquisition request \\(\\lambda_t\\) penalty weight, acquisition pairs mutual exclusion"},{"location":"smo_qubo_problem/#domain","title":"Domain","text":"Variable Meaning \\(x_{r,i} \\in \\{0,1\\}\\) \\(\\forall i \\in I_r \\quad \\land \\quad \\forall r \\in R\\)"}]}