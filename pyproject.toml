[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "smo-qubo"
description = "A library to solve space mission optimization problems with QAOA, in Qadence."
readme = "README.md"
version = "0.1.0"
requires-python = ">=3.10,<3.13"
license = {text = "Proprietary"}
keywords = ["quantum"]
authors = [
  { name = "Lorenzo Cardarelli", email = "lorenzo.cardarelli@pasqal.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

# always specify a version for each package
# to maintain consistency
dependencies = [
  "qadence==1.7.4",
  "graphviz==0.20.3",
]

[tool.hatch.metadata]
allow-direct-references = true
allow-ambiguous-features = true

# add one or more extras in the dependencies
[project.optional-dependencies]
extras = []

[tool.hatch.envs.default]
features = ["extras"]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
  "nbconvert",
  "ipykernel",
  "pre-commit",
  "black",
  "ruff",
]

[tool.hatch.envs.default.scripts]
test = "pytest -vvv --cov-report=term-missing --cov-config=pyproject.toml --cov=flow --cov=tests --ignore=./tests/test_examples.py --ignore=./tests/test_notebooks.py {args}"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = """-vvv --cov-report=term-missing --cov-config=pyproject.toml --cov=template_python --cov=tests"""
xfail_strict = true
filterwarnings = [
  "ignore:Call to deprecated create function FieldDescriptor",
  "ignore:Call to deprecated create function Descriptor",
  "ignore:Call to deprecated create function EnumDescriptor",
  "ignore:Call to deprecated create function EnumValueDescriptor",
  "ignore:Call to deprecated create function FileDescriptor",
  "ignore:Call to deprecated create function OneofDescriptor",
  "ignore:distutils Version classes are deprecated.",
]

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-section-index",
  "mkdocs-exclude",
  "markdown-exec",
  "mike",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict {args}"
serve = "mkdocs serve --dev-addr localhost:8000"
test = "mkdocs build --clean --strict"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311", "312"]

[tool.hatch.build.targets.wheel]
packages = ["smoqubo"]

[tool.coverage.run]
branch = true
parallel = true
# uncomment to omit any file from the
# coverage. Regexps can be used
# to select all files from a folder
#omit = [
#  "template_python/to_omit.py",
#]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
select = ["E", "F", "I", "Q"]
extend-ignore = ["F841"]
line-length = 100

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = false
ignore_missing_imports = true
